void replacePi(char input[]) {
    // Base case: if the string has fewer than 2 characters, no "pi" can exist
    if (input[0] == '\0' || input[1] == '\0') {
        return;
    }

    // If "pi" is found at the beginning of the current substring
    if (input[0] == 'p' && input[1] == 'i') {
        // Shift characters to the right to make space for "3.14"
        int i = 0;
        while (input[i] != '\0') {
            i++;
        }
        // Move characters forward to make space for "3.14"
        for (int j = i; j >= 2; j--) {
            input[j + 2] = input[j];
        }

        // Replace "pi" with "3.14"
        input[0] = '3';
        input[1] = '.';
        input[2] = '1';
        input[3] = '4';
        
        // Recursively call replacePi starting from the 4th character after the replacement
        replacePi(input + 4);
    } else {
        // Move to the next character if "pi" isn't found
        replacePi(input + 1);
    }
}
