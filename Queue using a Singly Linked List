/************************************************************
 
    Following is the structure of the node class 
 
    class Node {
    	public :
    	int data;
    	Node *next;

    	Node(int data) {
        	this->data = data;
        	next = NULL;
    	}
	};

**************************************************************/

class Queue {
Node * head;
Node *tail;
int size;
   public:
    Queue() {
head = NULL;
size = 0;
tail = NULL;

	}
	
	/*----------------- Public Functions of Stack -----------------*/

	int getSize() {
return size;

	}

    bool isEmpty() {
return size == 0;
	}

    void enqueue(int data) {
Node*newNode =new Node(data);
if(head == NULL){
	head = newNode;
	tail = newNode;
}
else {
	tail ->next = newNode;
	tail = newNode;
}
size++;
	}

    int dequeue() {
		if(head == NULL) return-1;
int val = head->data;
Node *temp = head;
head = head->next;
delete temp;
size--;
return val;

    }

    int front() {
if(head == NULL) return -1;
return head->data;

    }
};
